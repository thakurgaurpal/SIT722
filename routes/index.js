var express = require('express');
var router = express.Router();
const nameList = [
  { 'S.N': '1', 'Term': 'Heroku', 'Description': 'Heroku is a cloud based platform as a service that enables developers to build, run and manage applications written in different languages like Java, Python, Nod.js, Ruby, PHP etc', 'Refrences': 'https://devcenter.heroku.com/articles/how-heroku-works' },
  { 'S.N': '2', 'Term': 'Microservices', 'Description': 'Microservices and its architecture pattern language is a collection of patterns for applying the microservice architecture it’s an approach to application development in which a large application is built from modular components or services. Each module supports a specific task or business goal and uses a simple, well-defined interface, such as an application programming interface (API), to communicate with other sets of services.', 'Refrences': 'https://www.techtarget.com/searchapparchitecture/definition/microservices' },
  { 'S.N': '3', 'Term': 'Kubernetes', 'Description': 'Kubernetes is a portable, extensible, open source platform for managing containerized workloads and services, that facilitates both declarativeconfiguration and automation. It has a large, rapidly growing ecosystem', 'Refrences': 'https://kubernetes.io/docs/concepts/overview/' },
  { 'S.N': '4', 'Term': 'Docker', 'Description': 'Dockeris an open source platform that enables developers to build, deploy, run, update and manage containers—standardized, executable components that combine application source code with the operating system (OS) libraries and dependencies required to run that code in any environment.', 'Refrences': 'https://www.ibm.com/topics/docker' },
  { 'S.N': '5', 'Term': 'Agile Methodology', 'Description': 'Agile methodologies are approaches to product development that are aligned with the values and principles described in the Agile Manifesto for software development. Agile methodologies aim to deliver the right product, with incremental and frequent delivery of small chunks of functionality, through small cross-functional self-organizing teams, enabling frequent customer feedback and course correction as needed. ', 'Refrences': 'https://www.nimblework.com/agile/agile-methodology/' },
  { 'S.N': '6', 'Term': 'Command line interface (CLI)', 'Description': 'CLI is a text-based user interface (UI) used to run programs, manage computer files and interact with the computer.', 'Refrences': 'https://www.comms-express.com/infozone/article/command-line-interface/' },
  { 'S.N': '7', 'Term': 'Scrum', 'Description': 'Scrum is a framework within which people can address complex adaptive problems, while productively and creatively delivering products of thehighest possible value', 'Refrences': 'https://www.scrum.org/learning-series/what-is-scrum' },
  { 'S.N': '8', 'Term': 'Waterfall Model', 'Description': 'The Waterfall Model was the first Process Model to be introduced. It is also referred to as a linear-sequential life cycle model. It is very simple to understand and use. In a waterfall model, each phase must be completed before the next phase can begin and there is no overlapping in the phases. ', 'Refrences': 'https://www.tutorialspoint.com/sdlc/sdlc_waterfall_model.htm' },
  { 'S.N': '9', 'Term': 'Automation tool', 'Description': 'Automation tool that helps teams and organizations automate their software testing needs, reducing the need for human intervention and thus achieving greater speed, reliability, and efficiency', 'Refrences': 'https://www.automationanywhere.com/rpa/automation-software' },
  { 'S.N': '10', 'Term': 'Product Ecosystem', 'Description': 'The product ecosystemis based on the concept of a biological ecosystem. In the natural world, an ecosystem is a community of organisms—plants and animals—living within a shared environment that connects all the components of the community via nutrient cycles and energy flows', 'Refrences': 'https://www.appcues.com/blog/software-product-tool-platform-ecosystem' },
  { 'S.N': '11', 'Term': 'DevOps', 'Description': 'DevOps is a set of practices, tools, and a cultural philosophy that automate and integrate the processes between software development and IT teams. It emphasizes team empowerment, cross-team communication and collaboration, and technology automation.', 'Refrences': 'https://www.atlassian.com/devops' },
  { 'S.N': '12', 'Term': 'Cluster', 'Description': 'A cluster is a group of machines that work together to run workloads and provide high availability.', 'Refrences': 'https://docs.docker.com/glossary/' },
  { 'S.N': '13', 'Term': 'Docker Container', 'Description': 'A container is a runtime instance of a docker image. A Docker container consists of a Docker image, an execution environment, and a standard set of instructions', 'Refrences': 'https://docs.docker.com/engine/reference/commandline/container/' },
  { 'S.N': '14', 'Term': 'Docker hub', 'Description': 'The Docker Hub is a centralized resource for working with Docker and its components. It provides the following services: 1.A registry to host Docker images. 2. User authentication 3. Automated image builds and workflow tools such as build triggers and web hooks. 4. Integration with GitHub and Bitbucket 5. Security vulnerability scanning', 'Refrences': 'https://docs.docker.com/glossary/' },
  { 'S.N': '15', 'Term': 'Dockerfile', 'Description': 'A Dockerfile is a text document that contains all the commands you would normally execute manually in order to build a Docker image. Docker can build images automatically by reading the instructions from a Dockerfile.', 'Refrences': 'https://geekflare.com/dockerfile-tutorial/' },
  { 'S.N': '16', 'Term': 'Estimation in Docker', 'Description': 'In software development, an “estimate” is the evaluation of the effort necessary to carry out a given development task; this is most often expressed in terms of duration.', 'Refrences': 'https://www.agilealliance.org/agile101/agile-glossary/' },
  { 'S.N': '17', 'Term': 'Docker Registry', 'Description': 'A Registry is a hosted service containing repositories of images which responds to the Registry API. The default registry can be accessed using a browser at Docker Hub or using the docker search command. ', 'Refrences': 'https://docs.docker.com/glossary/' },
  { 'S.N': '18', 'Term': 'Iterative Development', 'Description': 'Agile projects are iterative insofar as they intentionally allow for “repeating” software development activities, and for potentially “revisiting” the same work products i.e-the phrase “planned rework” is sometimes used; refactoring is a good example.', 'Refrences': 'https://www.agilealliance.org/agile101/agile-glossary/' },
  { 'S.N': '19', 'Term': 'Retrospective', 'Description': 'The team meets regularly to reflect on the most significant events that occurred since the previous such meeting, and identify opportunities for improvement. ', 'Refrences': 'https://www.agilealliance.org/agile101/agile-glossary/' },
  { 'S.N': '20', 'Term': 'Docker Integration', 'Description': 'Integration (or “integrating”) refers to any efforts still required for a project team to deliver a product suitable for release as a functional whole. ', 'Refrences': 'https://www.agilealliance.org/agile101/agile-glossary/' },
  { 'S.N': '21', 'Term': 'Blackbox testing', 'Description': 'Black-box testing is a method to test software without knowing its internal code. Testers focus on inputs and outputs based on specifications. It ensures the software works as intended from a users perspective.', 'Refrences': 'https://www.checkpoint.com/cyber-hub/cyber-security/what-is-penetration-testing/what-is-black-box-testing/#:~:text=Black%20box%20testing%2C%20a%20form,automated%20black%20box%20security%20testing.' },
  { 'S.N': '22', 'Term': 'Product Owner', 'Description': 'A product owner is a role created by the Scrum Framework responsible for making sure the team delivers the desired outcome. ', 'Refrences': 'Available at: https://www.agilealliance.org/agile101/agile-glossary/ ' },
  { 'S.N': '23', 'Term': 'Acceptance testing', 'Description': 'Formal testing with respect to user needs, requirements, and business processes conducted to determine whether or not a system satisfies the acceptance criteria and to enable the user, customers or other authorized entity to determine whether or not to accept the system.', 'Refrences': 'Available at: https://www.softwaretestinghelp.com/software-testingterms-complete-glossary/ ' },
  { 'S.N': '24', 'Term': 'Agile testing', 'Description': 'Testing practice for a project using agile methodologies, such as extreme programming (XP), treating development as the customer of testing and emphasizing the test-first design paradigm. ', 'Refrences': 'Available at: https://www.softwaretestinghelp.com/software-testingterms-complete-glossary/ ' },
  { 'S.N': '25', 'Term': 'Ad hoc testing', 'Description': 'Testing carried out informally; no formal test preparation takes place, no recognized test design technique is used, there are no expectations for results and randomness guides the test execution activity. ', 'Refrences': 'Available at: https://www.softwaretestinghelp.com/software-testingterms-complete-glossary/ ' },
  { 'S.N': '26', 'Term': 'Alpha testing', 'Description': 'Alpha testing is often employed as a form of internal acceptance testing. Simulated or actual operational testing by potential users/customers or an independent test team at the developers’ site, but outside the development organization. ', 'Refrences': ': https://www.softwaretestinghelp.com/software-testingterms-complete-glossary/ ' },
  { 'S.N': '27', 'Term': 'Beta testing', 'Description': 'Operational testing by potential and/or existing users/customers at an external site not otherwise involved with the developers, to determine whether or not a component or system satisfies the user/customer needs and fits within the business processes. Beta testing is often employed as a form of external acceptance testing in order to acquired feedback from the market. ', 'Refrences': 'Available at: https://www.softwaretestinghelp.com/software-testingterms-complete-glossary/ ' },
  { 'S.N': '28', 'Term': 'Exploratory testing', 'Description': 'Testing where the tester actively controls the design of the tests as those tests are performed and uses information gained while testing to design new and better tests. ', 'Refrences': 'Available at: https://www.softwaretestinghelp.com/software-testingterms-complete-glossary/ ' },
  { 'S.N': '29', 'Term': 'Decision table', 'Description': 'A table showing combinations of inputs and/or stimuli (causes) with their associated outputs and/or actions (effects), which can be used to design test cases. ', 'Refrences': ' https://www.softwaretestinghelp.com/software-testingterms-complete-glossary/ ' },
  { 'S.N': '30', 'Term': 'Fault tolerance', 'Description': 'The capability of the software product to maintain a specified level of performance in cases of software faults (defects) or of infringement of its specified interface. ', 'Refrences': ' https://www.softwaretestinghelp.com/software-testingterms-complete-glossary/ ' },
  { 'S.N': '31', 'Term': 'Monolithic Architecture', 'Description': 'A traditional software design architecture that is single-tiered, with tightly coupled components. This means that each component and its associated components must be present for code to be executed or compiled.', 'Refrences': 'https://www.geeksforgeeks.org/monolithic-architecture/' },
  { 'S.N': '32', 'Term': 'DevSecOps', 'Description': 'DevSecOps involves incorporating security into all stages of the software development workflow instead of saving it for the last stage. It is the practice of integrating security into a continuous integration, continuous delivery, and continuous deployment pipeline.', 'Refrences': 'https://www.atlassian.com/devops/devops-tools/devsecops-tools' },
  { 'S.N': '33', 'Term': 'Hybrid Cloud', 'Description': 'A hybrid cloud spans at least one private and one public cloud, giving businesses the ability to seamlessly scale up their on-prem infrastructure to the public cloud to handle any overflow. It allows businesses to avoid the time and cost of purchasing, installing, and maintaining new servers that they may not always need', 'Refrences': 'https://azure.microsoft.com/en-us/resources/cloud-computing-dictionary/what-is-hybrid-cloud-computing#:~:text=A%20hybrid%20cloud%E2%80%94sometimes%20called,to%20be%20shared%20between%20them.' },
  { 'S.N': '34', 'Term': 'Software-as- a-Service (SaaS)', 'Description': 'SaaS hosts applications and makes them available to users over the internet. It allows users to connect to and use cloud-based apps over the Internet.', 'Refrences': 'https://azure.microsoft.com/en-au/resources/cloud-computing-dictionary/what-is-saas' },
  { 'S.N': '35', 'Term': 'Continuous Delivery', 'Description': 'A software engineering approach in which continuous integration, automated testing, and automated deployment capabilities allow software to be developed and deployed rapidly, reliably, and repeatedly with minimal human intervention.', 'Refrences': 'https://www.atlassian.com/continuous-delivery/principles/continuous-integration-vs-delivery-vs-deployment' },
  { 'S.N': '36', 'Term': 'Integration testing', 'Description': 'The testing of a component or module of code to ensure it integrates correctly with other components or modules of code. It verifies the well functioning of all the services being used in application.', 'Refrences': 'https://www.atlassian.com/continuous-delivery/software-testing/types-of-software-testing' },
  { 'S.N': '37', 'Term': 'Functional testing', 'Description': 'A type of black-box testing where functions (also known as features) are tested by feeding them input and examining the output. It focus on the business requirements of an application. They only verify the output of an action and do not check the intermediate states of the system when performing that action.', 'Refrences': 'https://www.atlassian.com/continuous-delivery/software-testing/types-of-software-testing' },
  { 'S.N': '38', 'Term': 'Autonomous components', 'Description': 'Autonomous component is the basic building block of microservices architecture, it’s a package of software, web services, or application.', 'Refrences': 'https://www.atlassian.com/microservices' },
  { 'S.N': '39', 'Term': 'Functional integration', 'Description': 'Functional integration testing is verifying the interactions and communication between different components or performing functional testing of software applications integrated into a larger system.', 'Refrences': 'https://www.lambdatest.com/learning-hub/functional-integration-testing' },
  { 'S.N': '40', 'Term': 'StatefulSets', 'Description': 'StatefulSets is an open-source container orchestration platform, that is specifically designed for managing stateful applications. Unlike Stateless applications, StatefulSets are used for applications that require stable network identities, stable storage, and ordered deployment and scaling.', 'Refrences': 'https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/' },
  { 'S.N': '41', 'Term': 'Fail Fast', 'Description': 'A design strategy characterized by a rapid turnaround, where an attempt fails, is reported on time, feedback is quickly returned, the changes are made, and a new attempt is made.', 'Refrences': 'https://katalon.com/resources-center/blog/stop-test-execution-fail-fast' },
  { 'S.N': '42', 'Term': 'Dark Launch', 'Description': 'A development strategy in which a new version of the code, one that implements new features, is released to your team or a subset of the organization’s users but is either not visibly activated or is only partially so. This process is like a Canary Release.', 'Refrences': 'https://devcycle.com/solutions/dark-launch' },
  { 'S.N': '43', 'Term': 'Containerization', 'Description': 'An operating system (OS) level method of virtualization employed for the deployment and running of distributed applications without having to launch an entire virtual machine for every use', 'Refrences': 'https://www.ibm.com/topics/containerization' },
  { 'S.N': '44', 'Term': 'Behavior-Driven Development (BDD)', 'Description': 'An Agile software development methodology that encourages collaboration and teamwork between software developers, Quality Assurance, and business participants in any given software project.', 'Refrences': 'https://cucumber.io/docs/bdd/' },
  { 'S.N': '45', 'Term': 'User Acceptance Testing (UAT)', 'Description': 'A type of software testing that verifies that a given application works for the user. During this process, actual users test the software to make sure it behaves as expected in real-world scenarios.', 'Refrences': 'https://www.panaya.com/blog/testing/what-is-uat-testing/#:~:text=User%20Acceptance%20Testing%20(UAT)%2C,do%20in%20real%2Dworld%20situations.' },
  { 'S.N': '46', 'Term': 'Staging Environment', 'Description': 'A nearly exact replica of a production environment used to test codes, builds, and updates to make sure everything works properly before deployment. So if a bug happens to escape the test environment, then staging can catch it before it gets passed along to customers.', 'Refrences': 'https://launchdarkly.com/blog/what-is-a-staging-environment/#:~:text=A%20staging%20environment%20typically%20serves,before%20getting%20closer%20to%20release.' },
  { 'S.N': '47', 'Term': 'Application Release Automation (ARA)', 'Description': 'It allows agile software development teams to collaborate in programming across workstations using version control utilities. Web server configuration for software can be standardized to deploy in containers across public cloud hardware vendors.', 'Refrences': 'https://www.vmware.com/au/topics/glossary/content/application-release-automation.html' },
  { 'S.N': '48', 'Term': 'Exploratory Testing', 'Description': 'It is the practice of allowing testers to enter a product and find bugs and errors without the help of a script or test cases. It encourages testers to think creatively and simulate real-world usage, mimicking the actions of end users.', 'Refrences': 'https://www.globalapptesting.com/blog/what-is-exploratory-testing#:~:text=%E2%80%9CExploratory%20testing%E2%80%9D%20is%20the%20practice,the%20actions%20of%20end%20users.' },
  { 'S.N': '49', 'Term': 'Release Orchestration', 'Description': 'Using tools such as XL Release to manage software releases, taking them from the development stage to the actual software release. This includes the definition, automation, security, monitoring, and control of the manual and automated tasks.  ', 'Refrences': 'https://www.simplilearn.com/top-devops-terms-you-should-know-article' },
  { 'S.N': '50', 'Term': 'Lead Time', 'Description': 'In the world of manufacturing, this is the time involved in moving a work in progress (WIP) to a finished state. In the world of DevOps, the context changes to moving code changes to production.', 'Refrences': 'https://www.shortcut.com/blog/what-is-lead-time-and-why-should-agile-teams-care#:~:text=Lead%20time%20is%20the%20measurement,piece%20of%20the%20agile%20puzzle.' },

 
];

/* GET home page. */
router.get('/', function (req, res, next) {
  res.render('index', { title: 'DevOps Glossary', sub: '', names: nameList });
});

module.exports = router;
